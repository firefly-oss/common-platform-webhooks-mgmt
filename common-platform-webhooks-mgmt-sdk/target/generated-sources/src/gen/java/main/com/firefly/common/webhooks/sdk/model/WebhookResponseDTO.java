/*
 * Firefly Webhook Management Platform
 * Unified webhook ingestion platform for multiple providers with message queue integration
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: platform@getfirefly.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.firefly.common.webhooks.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDateTime;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Response after webhook event is received
 */
@JsonPropertyOrder({
  WebhookResponseDTO.JSON_PROPERTY_EVENT_ID,
  WebhookResponseDTO.JSON_PROPERTY_STATUS,
  WebhookResponseDTO.JSON_PROPERTY_MESSAGE,
  WebhookResponseDTO.JSON_PROPERTY_PROCESSED_AT,
  WebhookResponseDTO.JSON_PROPERTY_PROVIDER_NAME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-22T12:59:41.350272+02:00[Europe/Madrid]")
public class WebhookResponseDTO {
  public static final String JSON_PROPERTY_EVENT_ID = "eventId";
  private UUID eventId;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private String message;

  public static final String JSON_PROPERTY_PROCESSED_AT = "processedAt";
  private LocalDateTime processedAt;

  public static final String JSON_PROPERTY_PROVIDER_NAME = "providerName";
  private String providerName;

  public WebhookResponseDTO() {
  }

  public WebhookResponseDTO eventId(UUID eventId) {
    
    this.eventId = eventId;
    return this;
  }

   /**
   * Unique identifier for the processed webhook event
   * @return eventId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EVENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getEventId() {
    return eventId;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventId(UUID eventId) {
    this.eventId = eventId;
  }


  public WebhookResponseDTO status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Status of the webhook processing
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
  }


  public WebhookResponseDTO message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Message describing the result
   * @return message
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMessage() {
    return message;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessage(String message) {
    this.message = message;
  }


  public WebhookResponseDTO processedAt(LocalDateTime processedAt) {
    
    this.processedAt = processedAt;
    return this;
  }

   /**
   * Timestamp when the webhook was processed
   * @return processedAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROCESSED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDateTime getProcessedAt() {
    return processedAt;
  }


  @JsonProperty(JSON_PROPERTY_PROCESSED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProcessedAt(LocalDateTime processedAt) {
    this.processedAt = processedAt;
  }


  public WebhookResponseDTO providerName(String providerName) {
    
    this.providerName = providerName;
    return this;
  }

   /**
   * Provider name for reference
   * @return providerName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROVIDER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProviderName() {
    return providerName;
  }


  @JsonProperty(JSON_PROPERTY_PROVIDER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProviderName(String providerName) {
    this.providerName = providerName;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookResponseDTO webhookResponseDTO = (WebhookResponseDTO) o;
    return Objects.equals(this.eventId, webhookResponseDTO.eventId) &&
        Objects.equals(this.status, webhookResponseDTO.status) &&
        Objects.equals(this.message, webhookResponseDTO.message) &&
        Objects.equals(this.processedAt, webhookResponseDTO.processedAt) &&
        Objects.equals(this.providerName, webhookResponseDTO.providerName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventId, status, message, processedAt, providerName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookResponseDTO {\n");
    sb.append("    eventId: ").append(toIndentedString(eventId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    processedAt: ").append(toIndentedString(processedAt)).append("\n");
    sb.append("    providerName: ").append(toIndentedString(providerName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

